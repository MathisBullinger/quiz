service: quiz

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  environment:
    stage: ${opt:stage, self:provider.stage, 'dev'}

functions:
  quizCreate:
    handler: src/quiz.create
    events:
      - http:
          path: /quiz/create
          method: POST
  quizGetEdit:
    handler: src/quiz.getQuizEdit
    events:
      - http:
          path: /quiz/edit/{key}
          method: GET
  quizEditMeta:
    handler: src/quiz.editMeta
    events:
      - http:
          path: /quiz/edit
          method: PATCH
  addQuestion:
    handler: src/quiz.addQuestion
    events:
      - http:
          path: /quiz/question/add
          method: POST
  editQuestion:
    handler: src/quiz.editQuestion
    events:
      - http:
          path: /quiz/question/edit
          method: PATCH
  addAnswer:
    handler: src/quiz.addAnswer
    events:
      - http:
          path: /quiz/answer/add
          method: POST
  editAnswer:
    handler: src/quiz.editAnswer
    events:
      - http:
          path: /quiz/answer/edit
          method: PATCH
  deleteAnswer:
    handler: src/quiz.deleteAnswer
    events:
      - http:
          path: /quiz/answer/delete
          method: DELETE

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

custom:
  serverless-offline:
    httpPort: 5000
    noPrependStageInUrl: true
  webpack:
    webpackConfig: ./webpack.config.js
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

resources:
  Resources:
    quizTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: quiz
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
